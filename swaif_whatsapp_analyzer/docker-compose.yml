# SWAI WhatsApp Analyzer - Docker Compose
# Filosofia: Orquestração simples para máxima eficiência

version: '3.8'

services:
  swai-app:
    build: .
    container_name: swai-whatsapp-analyzer
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./assets:/app/assets
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados opcional (para versões futuras)
  swai-db:
    image: postgres:15-alpine
    container_name: swai-database
    environment:
      POSTGRES_DB: swai_whatsapp
      POSTGRES_USER: swai_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-swai2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles: ["database"]  # Ativar apenas quando necessário
    restart: unless-stopped

  # Redis para cache (para versões futuras)
  swai-cache:
    image: redis:7-alpine
    container_name: swai-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    profiles: ["cache"]  # Ativar apenas quando necessário
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: swai-network
    driver: bridge
